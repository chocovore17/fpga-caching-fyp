var g_data = {
a5:{
scopes:[{link:'z.htm?f=0&s=5',val:'work.AHBGPIO'}]
,assertions:[{dummy:0},{cr:'c',c:'g',z:'input_data_assumption',fc:'Gr',pc:'Gr',h0:'0',h1:'1'}
,{cr:'m',c:'Z',z:'gpio_dataout_reset_check',fc:'Gr',pc:'Rr',h0:'0',h1:'0'}
,{cr:'m',c:'Z',z:'gpio_datain_reset_check',fc:'Gr',pc:'Rr',h0:'0',h1:'0'}
,{cr:'c',c:'g',z:'gpio_dir_check',fc:'Gr',pc:'Gr',h0:'0',h1:'1'}
,{cr:'c',c:'g',z:'gpio_hrdata_msb_check',fc:'Gr',pc:'Gr',h0:'0',h1:'1'}
,{cr:'c',c:'g',z:'gpio_hrdata_lsb_check',fc:'Gr',pc:'Gr',h0:'0',h1:'1'}
,{cr:'c',c:'g',z:'gpio_hreadyout_check',fc:'Gr',pc:'Gr',h0:'0',h1:'1'}
,{cr:'c',c:'g',z:'gpio_parityerr_check',fc:'Gr',pc:'Gr',h0:'0',h1:'1'}
],
},
a179:{
scopes:[{s:'6',b:'1',val:'tb_top_AHBGPIO'},{link:'z.htm?f=0&s=179',val:'DUT_GPIO'}]
,assertions:[{dummy:0},{cr:'c',c:'g',z:'input_data_assumption',fc:'Gr',pc:'Gr',h0:'0',h1:'1'}
,{cr:'m',c:'Z',z:'gpio_dataout_reset_check',fc:'Gr',pc:'Rr',h0:'0',h1:'0'}
,{cr:'m',c:'Z',z:'gpio_datain_reset_check',fc:'Gr',pc:'Rr',h0:'0',h1:'0'}
,{cr:'c',c:'g',z:'gpio_dir_check',fc:'Gr',pc:'Gr',h0:'0',h1:'1'}
,{cr:'c',c:'g',z:'gpio_hrdata_msb_check',fc:'Gr',pc:'Gr',h0:'0',h1:'1'}
,{cr:'c',c:'g',z:'gpio_hrdata_lsb_check',fc:'Gr',pc:'Gr',h0:'0',h1:'1'}
,{cr:'c',c:'g',z:'gpio_hreadyout_check',fc:'Gr',pc:'Gr',h0:'0',h1:'1'}
,{cr:'c',c:'g',z:'gpio_parityerr_check',fc:'Gr',pc:'Gr',h0:'0',h1:'1'}
],
},
dummyEnd:0
};
processAssertionsData(g_data,1);